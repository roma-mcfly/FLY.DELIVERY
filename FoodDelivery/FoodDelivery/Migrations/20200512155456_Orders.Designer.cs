// <auto-generated />
using System;
using FoodDelivery.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodDelivery.Migrations
{
    [DbContext(typeof(AppDBContent))]
    [Migration("20200512155456_Orders")]
    partial class Orders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoodDelivery.Data.Models.Dish", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("availability");

                    b.Property<string>("img");

                    b.Property<string>("longDesc");

                    b.Property<string>("name");

                    b.Property<int>("price");

                    b.Property<int>("restaurantID");

                    b.Property<string>("shortDesc");

                    b.Property<int>("weight");

                    b.HasKey("id");

                    b.HasIndex("restaurantID");

                    b.ToTable("Dish");
                });

            modelBuilder.Entity("FoodDelivery.Data.Models.FoodCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.ToTable("FoodCategory");
                });

            modelBuilder.Entity("FoodDelivery.Data.Models.Restaurant", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FoodCategoryid");

                    b.Property<string>("address");

                    b.Property<bool>("avalible");

                    b.Property<int>("dishCategoryID");

                    b.Property<string>("img");

                    b.Property<bool>("isFavourite");

                    b.Property<string>("longDesc");

                    b.Property<string>("name");

                    b.Property<string>("shortDesc");

                    b.Property<string>("workingTime");

                    b.HasKey("id");

                    b.HasIndex("FoodCategoryid");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("FoodDelivery.Data.models.DeliveryCardItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeliveryCardId");

                    b.Property<int?>("dishid");

                    b.Property<int>("price");

                    b.HasKey("id");

                    b.HasIndex("dishid");

                    b.ToTable("DeliveryCardItem");
                });

            modelBuilder.Entity("FoodDelivery.Data.models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adress");

                    b.Property<DateTime>("deliveryTime");

                    b.Property<string>("email");

                    b.Property<string>("name");

                    b.Property<DateTime>("orderTime");

                    b.Property<string>("phone");

                    b.Property<string>("surname");

                    b.HasKey("id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("FoodDelivery.Data.models.OrderInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("dishId");

                    b.Property<int>("orderId");

                    b.Property<long>("price");

                    b.HasKey("id");

                    b.HasIndex("dishId");

                    b.HasIndex("orderId");

                    b.ToTable("OrderInfo");
                });

            modelBuilder.Entity("FoodDelivery.Data.Models.Dish", b =>
                {
                    b.HasOne("FoodDelivery.Data.Models.Restaurant", "Restaurant")
                        .WithMany("dishes")
                        .HasForeignKey("restaurantID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FoodDelivery.Data.Models.Restaurant", b =>
                {
                    b.HasOne("FoodDelivery.Data.Models.FoodCategory", "FoodCategory")
                        .WithMany("restaurants")
                        .HasForeignKey("FoodCategoryid");
                });

            modelBuilder.Entity("FoodDelivery.Data.models.DeliveryCardItem", b =>
                {
                    b.HasOne("FoodDelivery.Data.Models.Dish", "dish")
                        .WithMany()
                        .HasForeignKey("dishid");
                });

            modelBuilder.Entity("FoodDelivery.Data.models.OrderInfo", b =>
                {
                    b.HasOne("FoodDelivery.Data.Models.Dish", "dish")
                        .WithMany()
                        .HasForeignKey("dishId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FoodDelivery.Data.models.Order", "order")
                        .WithMany("orderDetails")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
